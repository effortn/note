Linux特殊权限

1、ACL权限
	1）简介
		ACL权限用于区分ugo外的权限需求
	2）开启
		| 查看分区ACL权限是否开启
			dumpe2fs -h /dev/sda5
				-h	仅显示超级块中信息，而不显示磁盘块组的详细信息
		| 临时开启分区ACL权限
			mount -o remount,acl /
				#重新挂载根分区，并挂载加入ACL权限
		| 永久开启分区ACL权限
			vi /etc/fstab
			UUID=ccc / ext4 defaults,acl 1 1
				#加入acl
			mount -o remount /
				#重启挂载文件系统或重启系统，使修改生效
	3）查看ACL命令
		getfacl 文件名
			#查看ACL权限
	4）设定ACL权限命令
		setfacl 选项 文件名
			选项：
				-m 设定ACL权限 		| u:用户名:权限  g:用户组:权限
				-x 删除指定的ACL权限
				-b 删除所有的ACL权限
				-d 设定默认ACL权限
				-k 删除默认ACL权限
				-R 递归设定ACL权限 
	5）最大有效权限和删除权限
		| 最大有效权限mask
			- mask是用来指定最大有效权限的。如果我给用户赋予了ACL权限，是需要和mask的权限“相与”才能得到用户的真正权限
			- setfacl -m m:rx /av
		| 删除ACL权限
			- setfacl -x u:用户名 文件名 | setfacl -x g:用户组 文件名
			  setfacl -b 文件名
	6）默认ACL权限和递归ACL权限
		| 递归权限
			- 递归是父目录在设定ACL权限时，所有的子文件和子目录也会拥有相同的ACL权限(权限溢出)
			- setfacl -m u:用户名:权限 -R 文件名
		| 默认ACL权限
			- 默认ACL权限的作用是如果给父目录设定了默认ACL权限，那么父目录中所有新建的子文件都会继承父目录的ACL权限
			- setfacl -m d:u:用户名:权限 权限名

2、sudo权限
	1）定义
		- root把本来只能超级用户执行的命令赋予普通用户执行。
		- sudo的操作对象是系统命令
	2）sudo使用
		修改速度权限
			visudo
				#实际修改的是 /etc/sudoers 文件
			root ALL=(ALL) ALL
			#用户名 被管理的主机的地址=(可使用的身份) 授权命令(绝对路径)
			#%whell ALL=(ALL) ALL
			#%组名 被管理主机的地址=(可使用的身份) 授权命令(绝对路径)
			#主机组别名：Host_Alias	CUNETS=128.138.0.0, 128,138,204.0
		查看可执行sudo命令
			sudo -l
		赋予普通用户设置用户密码的权限
			user1 ALL=/usr/bin/passwd [A-Za-z],!/usr/bin/passwd "",!/usr/bin/passwd root 
				#不能设定root用户的密码

3、文件特殊权限
	1）SetUID(/usr/bin/passwd)
		SetUID的功能
			| 只有可以执行的二进制程序才能设定SUID权限
			| 命令执行者要对该程序拥有x（执行）权限
			| 命令执行者在执行该程序时获得该程序文件属主的身份
			| SetUID权限只在该程序执行过程中有效
		设定SetUID的方法
			4代表SUID / u+s 代表SUID
				chmod 4755 文件名
				chmod u+s 文件名
		取消SetUID的方法
			chmod 0755 文件名
			chmod u-s 文件名
		危险的SetUID
			| 关键目录严格控制写权限。比如/,/usr
			| 用户的密码设置要严格遵守密码三原则
			| 对系统中默认应该具有SetUID权限的文件作一列表，定时检查有没有这之外的文件被设置了SetUID权限
	2）SetGID(/usr/bin/locate)
		SetGID针对文件的作用
			| 只有可以执行的二进制程序才能设定SGID权限
			| 命令执行者要对该程序拥有x（执行）权限
			| 在执行该程序时，组身份升级为该程序文件的属组
			| SetGID权限只在该程序执行过程中有效
		SetGID针对目录的作用
			| 普通用户必须对此目录拥有r和x权限，才能进入此目录
			| 普通用户在此目录中的有效组会变成目录的属组
			| 若普通用户对此目录拥有w权限时，新建的文件的默认属组是这个目录的属组
		SetGID设定和取消
			chmod 2755 文件名
			chmod g+s 文件名
			chmod 0755 文件名
			chmod g-s 文件名
	3）Sticky BIT(/tmp)
		SBIT粘着位作用
			| 粘着位目前只对目录有效
			| 普通用户对该目录拥有w和x权限
			| 如果没有粘着位，因为普通用户拥有w权限，所有可以删除此目录下所有文件，包括其他用户建立的文件。一但赋予了粘着位，除了root可以删除所有文件，普通用户就算拥有w权限，也只能删除自己建立的文件，但是不能删除其他用户建立的文件
		SBIT设定和取消
			chmod 1755 文件名
			chmod o+s 文件名
			chmod 0755 文件名
			chmod o-s 文件名

4、不可改变位权限
	1）chattr命令格式
		chattr [+-=] [选项] 文件名或目录名
			- +：增加权限
			- -：删除权限
			- =：等于某权限
			选项：
				i(insert)：如果对文件设置i属性，那么不允许对文件进行删除、改名，也不能添加和修改数据；如果对目录设置i属性，那么只能修改目录下文件的数据，但不允许建立和删除文件
				a(append)：如果对文件设置a属性，那么只能在文件中增加数据，但是不能删除也不能修改数据；如果对目录设置a属性，那么只允许在目录中建立和修改文件，但是不允许删除
